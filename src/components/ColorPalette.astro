---
interface Props {
  variant?: 'small' | 'large'
}

const { variant = 'small' } = Astro.props

/**
 * ColorPalette Component
 *
 * @description A component that displays the color palettes for the color contrast checker
 */
---

<div class={`color-palette ${variant}`}>
  {variant === 'small' && <p class="text-sm">Foreground shades</p>}
  <div class="color-palette__foreground">
    <div class="shade" style="background-color: var(--color-foreground-10);"></div>
    <div class="shade" style="background-color: var(--color-foreground-20);"></div>
    <div class="shade" style="background-color: var(--color-foreground-30);"></div>
    <div class="shade" style="background-color: var(--color-foreground-40);"></div>
    <div class="shade" style="background-color: var(--color-foreground-50);"></div>
  </div>
  {variant === 'small' && <p class="text-sm">Background shades</p>}
  <div class="color-palette__background">
    <div class="shade" style="background-color: var(--color-background-10);"></div>
    <div class="shade" style="background-color: var(--color-background-20);"></div>
    <div class="shade" style="background-color: var(--color-background-30);"></div>
    <div class="shade" style="background-color: var(--color-background-40);"></div>
    <div class="shade" style="background-color: var(--color-background-50);"></div>
  </div>
</div>

<style lang="scss">
  @use '../assets/scss/base/breakpoint' as *;

  .color-palette {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);

    &__foreground,
    &__background {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      flex: 1;
      gap: var(--space-3xs);
      inline-size: fit-content;
    }

    &__foreground {
      margin-block-end: var(--space-2xs);
    }

    .shade {
      border-radius: var(--radius-s);
      inline-size: 3rem;
      block-size: 3rem;
      min-block-size: 0;
    }

    &.large {
      inline-size: 100%;
      block-size: 100%;

      .color-palette__foreground,
      .color-palette__background {
        gap: var(--space-2xs);
        margin-block-end: 0;
        inline-size: 100%;
      }

      .shade {
        inline-size: 100%;
        block-size: 100%;
      }
    }
  }
</style>
