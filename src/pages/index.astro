---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import Controls from '@components/Controls.astro'
import UserInterface from '@components/UserInterface.astro'
import GridBlock from '@components/GridBlock.astro'
import RadioButtons from '@components/RadioButtons.astro'
import ContrastCard from '@components/ContrastCard.astro'
import ColorPalettes from '@components/ColorPalettes.astro'
import ProgressBar from '@components/ProgressBar.astro'
import { Accordion, AccordionItem, Badge } from 'accessible-astro-components'
import { Icon } from 'astro-icon/components'
---

<DefaultLayout title="Home">
  <section class="interface">
    <Controls />
    <UserInterface>
      <div slot="header">
        <a href="/css-variables" class="flex items-center gap-2">
          <Icon name="lucide:paintbrush-vertical" size="1.5rem" />
          Generate CSS variables
        </a>
      </div>
      <div slot="body">
        <div class="grid-blocks">
          <GridBlock>
            <a href="#" class="button">Astro rocks!</a>
          </GridBlock>
          <GridBlock>
            <div class="flex flex-col gap-4">
              <Badge type="info" size="lg">New merch</Badge>
              <Badge type="success" size="lg">New merch</Badge>
              <Badge type="warning" size="lg">New merch</Badge>
              <Badge type="error" size="lg">New merch</Badge>
            </div>
          </GridBlock>
          <GridBlock align="center">
            <Accordion>
              <AccordionItem title="What's on your mind?" variant="chevron">
                <p>I'm thinking about the meaning of life. I'm thinking about the meaning of life.</p>
              </AccordionItem>
              <AccordionItem title="What's on your mind?" variant="chevron">
                <p>I'm thinking about the meaning of life. I'm thinking about the meaning of life.</p>
              </AccordionItem>
              <AccordionItem title="What's on your mind?" variant="chevron">
                <p>I'm thinking about the meaning of life. I'm thinking about the meaning of life.</p>
              </AccordionItem>
            </Accordion>
          </GridBlock>
          <GridBlock>
            <RadioButtons
              legend="Which framework"
              name="framework"
              options={[
                { id: 'astro', label: 'Astro of course', value: 'astro' },
                { id: 'react', label: 'React is great', value: 'react' },
                { id: 'vue', label: 'Vue is the best', value: 'vue' },
                { id: 'svelte', label: 'Svelte is cool', value: 'svelte' },
              ]}
            />
          </GridBlock>
          <GridBlock>
            <ContrastCard />
          </GridBlock>
          <GridBlock>
            <div class="text-block flex flex-col gap-2">
              <h2 class="text-2xl">Block of text</h2>
              <p>
                Astro is a modern web framework combining static site generation with dynamic components. It delivers
                fast performance through partial hydration, sending minimal JavaScript to clients. With intuitive
                syntax, content collections, and seamless integration with React, Vue, and Svelte, Astro simplifies
                building content-focused websites while maintaining excellent developer experience.
              </p>
            </div>
          </GridBlock>
          <GridBlock>
            <ColorPalettes />
          </GridBlock>
          <GridBlock>
            <div class="flex w-full flex-col gap-4">
              <ProgressBar icon="lucide:eye" label="Vision" progress={80} />
              <ProgressBar icon="lucide:ear" label="Vision" progress={80} />
              <ProgressBar icon="lucide:hand" label="Touch" progress={80} />
            </div>
          </GridBlock>
          <GridBlock>
            <Icon name="lucide:smile" size="8rem" style="color: var(--color-background-base)" />
          </GridBlock>
        </div>
      </div>
    </UserInterface>

    <style lang="scss">
      .grid-blocks {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: var(--space-2xs);
        margin-block-start: var(--space-s);

        :global(.grid-block) {
          &:nth-child(3) {
            grid-column: span 2;
          }

          &:nth-child(5) {
            // grid-row: span 2;
            grid-column: span 2;
            block-size: 100%;
          }

          &:nth-child(6) {
            grid-column: span 3;
          }

          &:nth-child(8) {
            grid-column: span 3;
          }
        }
      }

      .accordion {
        inline-size: 100%;

        .item {
          :global(.wrapper) {
            border: 1px solid var(--background-color);
            background-color: var(--color-background-10);
          }
        }

        :global(.item:first-child .wrapper) {
          border-radius: var(--radius-s) var(--radius-s) 0 0;
        }

        :global(.item:last-child .wrapper) {
          border-radius: 0 0 var(--radius-s) var(--radius-s);
        }

        :global(.title),
        :global(.content) {
          padding-inline: var(--space-s);
          color: var(--color-foreground-50);
        }

        :global(.title) {
          padding-block: 0;
        }
      }

      .button {
        border-color: var(--color-background-10);
        background-color: var(--color-background-10);
        color: var(--color-foreground-50);
      }

      .text-block {
        color: var(--color-background-10);
      }
    </style>
  </section>
</DefaultLayout>
